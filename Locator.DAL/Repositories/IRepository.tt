<#
//*********************************************************
//
//    Copyright (c) Microsoft. All rights reserved.
//    This code is licensed under the Microsoft Public License.
//    THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
//    ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
//    IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
//    PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
#>
<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="../../t4functions.t4"#>
<#@ output extension=".cs"#>
<#
var project = GetProject("Locator.Entity");
var ns = GetNamespace(project.CodeModel.CodeElements, "Locator");
var ns1 = GetNamespace(ns.Members, "Entity");
var ns2 = GetNamespace(ns1.Members, "Entities");
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
foreach (CodeElement codeNamespaceElement in ns2.Members)
{

	if ( codeNamespaceElement.Kind == vsCMElement.vsCMElementClass )
	{
		CodeClass codeClass = (CodeClass)codeNamespaceElement;

		bool baseExist = false;
		foreach (var bc in codeClass.Bases)
		{
			CodeClass baseClass = (CodeClass)bc;
			if (IsEntityClass(baseClass.Name))
				baseExist = true;
		}
		if (baseExist)
		{					
			fileManager.StartNewFile("I" + codeClass.Name + "Repository.g.cs");
			#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Locator.Entity.Entities;

namespace Locator.DAL.Repositories
{
	/// <summary>
	/// <#=codeClass.Name#> Repository Interface
	/// </summary>
	public partial interface I<#=codeClass.Name#>Repository : IBaseRepository<<#=codeClass.Name#>>
	{ 
	}
}
		<#
		}
	}
}
fileManager.Process();
#>